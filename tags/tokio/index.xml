<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>tokio on my dev note</title>
    <link>http://huijeong-kim.github.io/tags/tokio/</link>
    <description>Recent content in tokio on my dev note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr</language>
    <lastBuildDate>Sat, 27 Aug 2022 18:49:11 +0900</lastBuildDate><atom:link href="http://huijeong-kim.github.io/tags/tokio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Async Rust에서 mpsc queue 사용하기</title>
      <link>http://huijeong-kim.github.io/post/2022-08-27-tokio-mpsc/</link>
      <pubDate>Sat, 27 Aug 2022 18:49:11 +0900</pubDate>
      
      <guid>http://huijeong-kim.github.io/post/2022-08-27-tokio-mpsc/</guid>
      <description>mpsc(multi produce single consumer) queue는 thread 간 message를 주고받는 channel로 많이 쓰입니다. std mpsc와 crossbeam channel가 많이 쓰이는 mpsc channel이고, async rust에서는 tokio mpsc를 사용할 수 있습니다.
async rust에서 mpsc queue를 사용하는 방법을 알아보겠습니다.
1. std::sync::mpsc 사용하기 가장 먼저 std 라이브러리의 mpsc를 사용해 볼 수 있겠습니다. Async rust에서 mpsc를 사용하려면 여러 future들이 message sender(tx)를 갖고 있고 하나의 future가 message receiver(rx)를 갖고 있어야 합니다. mpsc의 Sender는 clone 가능하므로 다음과 같이 tx를 clone하여 여러 Future가 message channel을 공유할 수 있습니다.</description>
    </item>
    
  </channel>
</rss>
