<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>runtime on my dev note</title>
    <link>http://huijeong-kim.github.io/tags/runtime/</link>
    <description>Recent content in runtime on my dev note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr</language>
    <lastBuildDate>Sun, 11 Sep 2022 18:53:04 +0900</lastBuildDate><atom:link href="http://huijeong-kim.github.io/tags/runtime/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust Async Programming</title>
      <link>http://huijeong-kim.github.io/post/2022-09-11-rust-async-programming/</link>
      <pubDate>Sun, 11 Sep 2022 18:53:04 +0900</pubDate>
      
      <guid>http://huijeong-kim.github.io/post/2022-09-11-rust-async-programming/</guid>
      <description>오늘은 Rust에서 제공하는 Asynchronous Programming 관련 feature들에 대해 정리하면서, async 관련 포스트를 쓸 때 마다 사용되는 단어들, async, future, runtime, executor에 대해 정리해 보겠습니다. 오늘은 유독 내용이 추상적인 느낌에 부족한 부분이 많은 것 같은데, 틀린 부분이나 부족한 부분이 있다면 코멘트 남겨 주세요 :)
Asynchronous Programming Async book에는 Asynchronous programming이 다음과 같이 정의되어 있습니다.
Asynchronous programming, or async for short, is a concurrent programming model supported by an increasing number of programming languages.</description>
    </item>
    
  </channel>
</rss>
